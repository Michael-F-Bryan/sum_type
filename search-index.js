var N = null;var searchIndex = {};
searchIndex["sum_type"]={"doc":"A convenience macro for creating a wrapper enum which may be one of several distinct types. In type theory, this is often referred to as a [sum type].","items":[[8,"SumType","sum_type","Various methods for introspection and dynamic typing.",N,N],[10,"variant","","The name of the current variant.",0,[[["self"]],["str"]]],[10,"variants","","A list of all possible variants.",0,N],[10,"downcast_ref","","Try to get a reference to the inner field if it is a `T`.",0,[[["self"]],["option"]]],[10,"downcast_mut","","Return a mutable reference to the inner field if it is a `T`.",0,[[["self"]],["option"]]],[10,"variant_is","","Is the underlying variant an instance of `T`?",0,[[["self"]],["bool"]]],[14,"sum_type","","The entire point.",N,N]],"paths":[[8,"SumType"]]};
initSearch(searchIndex);
